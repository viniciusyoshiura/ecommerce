package com.mycompany.ecommerce.repositories;

import java.util.List;



import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.mycompany.ecommerce.domain.Category;
import com.mycompany.ecommerce.domain.Product;

@Repository
public interface ProductRepository extends JpaRepository<Product, Integer> {
	
	@Transactional(readOnly = true)
	@Query("SELECT DISTINCT obj FROM Product obj "
			+ "INNER JOIN obj.categories cat "
			+ "WHERE obj.name LIKE %:name% AND cat IN :categories")
	Page<Product> search(@Param("name") String name, @Param("categories")List<Category> categories, Pageable pageRequest);
	
	
	// ---------- Automatic queries generated by Spring Framework
	// ---------- This is the same as the query above
	// See: https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#reference
	@Transactional(readOnly = true)
	Page<Product> findDistinctByNameContainingAndCategoriesIn(String name, List<Category> categories, Pageable pageRequest);
	
}
